package gui;

import database.DatabaseConnector;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class UpdatePatient extends javax.swing.JFrame {

    /**
     * Creates new form UpdatePatient
     */
    ArrayList <String>arrayList;
    public UpdatePatient(ArrayList<String> al) {
        initComponents();
        arrayList = new ArrayList();
        arrayList = al;
    }

    public UpdatePatient (){
    initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nid = new javax.swing.JCheckBox();
        gender = new javax.swing.JCheckBox();
        dob = new javax.swing.JCheckBox();
        address = new javax.swing.JCheckBox();
        cellno = new javax.swing.JCheckBox();
        l_name = new javax.swing.JCheckBox();
        m_name = new javax.swing.JCheckBox();
        f_name = new javax.swing.JCheckBox();
        fName_Field = new javax.swing.JTextField();
        mName_Field = new javax.swing.JTextField();
        lName_Field = new javax.swing.JTextField();
        address_Field = new javax.swing.JTextField();
        gender_Field = new javax.swing.JTextField();
        nid_Field6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        dob_Field = new javax.swing.JTextField();
        cellno_Field = new javax.swing.JTextField();
        UpdateData = new javax.swing.JButton();
        retrieve = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nid.setText("NID");
        nid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nidActionPerformed(evt);
            }
        });

        gender.setText("Gender");
        gender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderActionPerformed(evt);
            }
        });

        dob.setText("Date of Birth");
        dob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dobActionPerformed(evt);
            }
        });

        address.setText("Address");
        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });

        cellno.setText("Cell No.");
        cellno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cellnoActionPerformed(evt);
            }
        });

        l_name.setText("Last Name");
        l_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l_nameActionPerformed(evt);
            }
        });

        m_name.setText("Middle Name");
        m_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_nameActionPerformed(evt);
            }
        });

        f_name.setText("First Name");
        f_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f_nameActionPerformed(evt);
            }
        });

        fName_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fName_FieldActionPerformed(evt);
            }
        });

        mName_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mName_FieldActionPerformed(evt);
            }
        });

        lName_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lName_FieldActionPerformed(evt);
            }
        });

        address_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                address_FieldActionPerformed(evt);
            }
        });

        gender_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gender_FieldActionPerformed(evt);
            }
        });

        nid_Field6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nid_Field6ActionPerformed(evt);
            }
        });

        jTextField7.setText("jTextField1");
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        dob_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dob_FieldActionPerformed(evt);
            }
        });

        cellno_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cellno_FieldActionPerformed(evt);
            }
        });

        UpdateData.setText("Update");
        UpdateData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateDataActionPerformed(evt);
            }
        });

        retrieve.setText("Retrieve");
        retrieve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retrieveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(UpdateData)
                        .addGap(26, 26, 26)
                        .addComponent(retrieve))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dob)
                                .addGap(18, 18, 18)
                                .addComponent(dob_Field))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cellno)
                                    .addComponent(address)
                                    .addComponent(nid))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(nid_Field6, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addComponent(address_Field))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(59, 59, 59)
                                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addComponent(cellno_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(f_name)
                                    .addComponent(m_name)
                                    .addComponent(l_name)
                                    .addComponent(gender))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lName_Field, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                    .addComponent(mName_Field)
                                    .addComponent(fName_Field)
                                    .addComponent(gender_Field))))))
                .addContainerGap(166, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(f_name)
                    .addComponent(fName_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m_name)
                    .addComponent(mName_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_name)
                    .addComponent(lName_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gender)
                    .addComponent(gender_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nid)
                    .addComponent(nid_Field6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(address)
                    .addComponent(address_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dob)
                    .addComponent(dob_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cellno)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cellno_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UpdateData)
                    .addComponent(retrieve))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void f_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f_nameActionPerformed
        // TODO add your handling code here:
        boolean isTicked = f_name.isSelected();
        fName_Field.setVisible(isTicked);
    }//GEN-LAST:event_f_nameActionPerformed

    private void cellnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cellnoActionPerformed
        boolean isTicked = cellno.isSelected();
        cellno_Field.setVisible(isTicked);
// TODO add your handling code here:
    }//GEN-LAST:event_cellnoActionPerformed

    private void m_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_nameActionPerformed
        // TODO add your handling code here:
boolean isTicked = m_name.isSelected();
mName_Field.setVisible(isTicked);
    }//GEN-LAST:event_m_nameActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void dob_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dob_FieldActionPerformed
        
        
//boolean isTicked = f_name.isSelected();
// TODO add your handling code here:
    }//GEN-LAST:event_dob_FieldActionPerformed

    private void cellno_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cellno_FieldActionPerformed

        
// TODO add your handling code here:
    }//GEN-LAST:event_cellno_FieldActionPerformed

    private void l_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l_nameActionPerformed
boolean isTicked = l_name.isSelected();
lName_Field.setVisible(isTicked);
// TODO add your handling code here:
    }//GEN-LAST:event_l_nameActionPerformed

    private void genderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderActionPerformed
        boolean isTicked = gender.isSelected();// TODO add your handling code here:
        gender_Field.setVisible(isTicked);
    }//GEN-LAST:event_genderActionPerformed

    private void nidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nidActionPerformed
        boolean isTicked = nid.isSelected();
        nid_Field6.setVisible(isTicked);
// TODO add your handling code here:
    }//GEN-LAST:event_nidActionPerformed

    private void addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressActionPerformed
        
boolean isTicked = address.isSelected();
address_Field.setVisible(isTicked);// TODO add your handling code here:
    }//GEN-LAST:event_addressActionPerformed

    private void dobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dobActionPerformed
    boolean isTicked = dob.isSelected();
    dob_Field.setVisible(isTicked);// TODO add your handling code here:
    }//GEN-LAST:event_dobActionPerformed

    private void mName_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mName_FieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_mName_FieldActionPerformed

    private void lName_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lName_FieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_lName_FieldActionPerformed

    private void gender_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gender_FieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_gender_FieldActionPerformed

    private void nid_Field6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nid_Field6ActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_nid_Field6ActionPerformed

    private void address_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_address_FieldActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_address_FieldActionPerformed

    private void fName_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fName_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fName_FieldActionPerformed

    private void UpdateDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateDataActionPerformed
        try {
            // TODO add your handling code here:
            DatabaseConnector dbconn = new DatabaseConnector();
            /*int count = 0;
            if(fName_Field.isVisible()) count++;
            else if(address_Field.isVisible()) count++;
            else if(nid_Field6.isVisible()) count++;
            else if(gender_Field.isVisible()) count++;
            else if(lName_Field.isVisible()) count++;
            else if(mName_Field.isVisible()) count++;
            else if(cellno_Field.isVisible()) count++;
            else if(dob_Field.isVisible()) count++;*/
           int count = 1;
            String [] data = new String[9];
            data[1] = fName_Field.getText();
            data[2] = lName_Field.getText();
            data[3] = mName_Field.getText();
            data[4] = address_Field.getText();
            data[5] = nid_Field6.getText();
            data[6] = gender_Field.getText();
            data[7] = cellno_Field.getText();
            data[8] = dob_Field.getText();
            
            
            dbconn.UpdateQuery(data,arrayList.get(0));
        } catch (SQLException ex) {
            Logger.getLogger(UpdatePatient.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UpdatePatient.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_UpdateDataActionPerformed

    private void retrieveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retrieveActionPerformed

        int count =1;
        fName_Field.setText(arrayList.get(count++));
        mName_Field.setText(arrayList.get(count++));
        lName_Field.setText(arrayList.get(count++));
        gender_Field.setText(arrayList.get(count++));
        nid_Field6.setText(arrayList.get(count++));
        address_Field.setText(arrayList.get(count++));
        dob_Field.setText(arrayList.get(count++));
        cellno_Field.setText(arrayList.get(count++));
        
    }//GEN-LAST:event_retrieveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdatePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdatePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdatePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdatePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdatePatient().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton UpdateData;
    private javax.swing.JCheckBox address;
    private javax.swing.JTextField address_Field;
    private javax.swing.JCheckBox cellno;
    private javax.swing.JTextField cellno_Field;
    private javax.swing.JCheckBox dob;
    private javax.swing.JTextField dob_Field;
    private javax.swing.JTextField fName_Field;
    private javax.swing.JCheckBox f_name;
    private javax.swing.JCheckBox gender;
    private javax.swing.JTextField gender_Field;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField lName_Field;
    private javax.swing.JCheckBox l_name;
    private javax.swing.JTextField mName_Field;
    private javax.swing.JCheckBox m_name;
    private javax.swing.JCheckBox nid;
    private javax.swing.JTextField nid_Field6;
    private javax.swing.JButton retrieve;
    // End of variables declaration//GEN-END:variables
}
